/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    comments: Comment;
    age_groups: AgeGroup;
    course_categories: CourseCategory;
    courses: Course;
    form_submissions: FormSubmission;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission1;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    comments: CommentsSelect<false> | CommentsSelect<true>;
    age_groups: AgeGroupsSelect<false> | AgeGroupsSelect<true>;
    course_categories: CourseCategoriesSelect<false> | CourseCategoriesSelect<true>;
    courses: CoursesSelect<false> | CoursesSelect<true>;
    form_submissions: FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect1<false> | FormSubmissionsSelect1<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    'site-settings': SiteSetting;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (
    | CallToActionBlock
    | CallToActionRelumeBlock
    | ContentBlock
    | FooterBlock
    | Header05Block
    | Layout01Block
    | Layout03Block
    | Layout04Block
    | MediaBlock
    | NavigationBlock
    | ArchiveBlock
    | FormBlock
    | TestimonialBlock
  )[];
  meta?: {
    title?: string | null;
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionRelumeBlock".
 */
export interface CallToActionRelumeBlock {
  heading: string;
  subheading?: string | null;
  image?: (number | null) | Media;
  form_settings?: {
    email_placeholder?: string | null;
    button_text?: string | null;
    success_message?: string | null;
    error_message?: string | null;
    form_identifier?: string | null;
  };
  terms_and_conditions?: {
    show_terms?: boolean | null;
    terms_text?: string | null;
    terms_link_text?: string | null;
    terms_link_url?: string | null;
  };
  layout?: ('image-right' | 'image-left' | 'text-only' | 'centered') | null;
  background_color?: ('default' | 'light' | 'dark' | 'primary') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta-relume';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FooterBlock".
 */
export interface FooterBlock {
  logo?: (number | null) | Media;
  contact_info?: {
    address_label?: string | null;
    address?: string | null;
    contact_label?: string | null;
    phone?: string | null;
    email?: string | null;
  };
  social_links?:
    | {
        platform: 'facebook' | 'instagram' | 'twitter' | 'linkedin' | 'youtube';
        url: string;
        id?: string | null;
      }[]
    | null;
  footer_links?:
    | {
        title?: string | null;
        links?:
          | {
              label: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  newsletter?: {
    enabled?: boolean | null;
    heading?: string | null;
    description?: string | null;
    button_text?: string | null;
    placeholder_text?: string | null;
  };
  partner_logos?:
    | {
        logo: number | Media;
        name: string;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  legal_links?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  copyright_text?: string | null;
  use_footer_config?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'footer-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Header05Block".
 */
export interface Header05Block {
  heading: string;
  description?: string | null;
  buttons?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  backgroundImage: number | Media;
  overlay?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'header05';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Layout01Block".
 */
export interface Layout01Block {
  eyebrow?: string | null;
  heading: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  buttons?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  image: number | Media;
  imageAlt?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'layout01';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Layout03Block".
 */
export interface Layout03Block {
  heading: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image: number | Media;
  imageAlt?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'layout03';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Layout04Block".
 */
export interface Layout04Block {
  tagline?: string | null;
  heading: string;
  description: string;
  features?:
    | {
        title: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  buttons?:
    | {
        text: string;
        variant: 'default' | 'secondary' | 'link' | 'outline';
        url?: string | null;
        openInNewTab?: boolean | null;
        id?: string | null;
      }[]
    | null;
  image: number | Media;
  imageAlt?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'layout04';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NavigationBlock".
 */
export interface NavigationBlock {
  logo?: (number | null) | Media;
  menu_items?:
    | {
        label: string;
        type: 'link' | 'dropdown' | 'mega_menu';
        url?: string | null;
        dropdown_sections?:
          | {
              section_title: string;
              items?:
                | {
                    label: string;
                    url: string;
                    description?: string | null;
                    icon?: (number | null) | Media;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        simple_dropdown_items?:
          | {
              label: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        featured_content?: {
          title?: string | null;
          subtitle?: string | null;
          description?: string | null;
          image?: (number | null) | Media;
          link_text?: string | null;
          link_url?: string | null;
          view_all_text?: string | null;
          view_all_url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  cta_buttons?:
    | {
        text: string;
        url: string;
        style?: ('primary' | 'secondary') | null;
        id?: string | null;
      }[]
    | null;
  use_header_config?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'navigation';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  age_groups?: (number | AgeGroup)[] | null;
  reading_time?: number | null;
  featured?: boolean | null;
  meta?: {
    title?: string | null;
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "age_groups".
 */
export interface AgeGroup {
  id: number;
  name: string;
  slug?: string | null;
  slugLock?: boolean | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  min_age: number;
  max_age: number;
  icon?: (number | null) | Media;
  order?: number | null;
  color?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialBlock".
 */
export interface TestimonialBlock {
  heading: string;
  subheading?: string | null;
  testimonials?:
    | {
        rating: number;
        quote: string;
        author: {
          name: string;
          title?: string | null;
          avatar?: (number | null) | Media;
        };
        company?: {
          name?: string | null;
          logo?: (number | null) | Media;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonial';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments".
 */
export interface Comment {
  id: number;
  content: string;
  author: {
    name: string;
    email: string;
  };
  post: number | Post;
  isApproved?: boolean | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "course_categories".
 */
export interface CourseCategory {
  id: number;
  name: string;
  slug?: string | null;
  slugLock?: boolean | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  icon?: (number | null) | Media;
  order?: number | null;
  target_audience: 'parents' | 'professionals' | 'municipalities' | 'daycare';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses".
 */
export interface Course {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  category: number | CourseCategory;
  age_groups?: (number | AgeGroup)[] | null;
  price?: number | null;
  duration_minutes?: number | null;
  format?: ('online' | 'physical' | 'hybrid') | null;
  max_participants?: number | null;
  featured_image?: (number | null) | Media;
  content_blocks?: (BannerBlock | CodeBlock | MediaBlock)[] | null;
  testimonials?:
    | {
        testimonial: string;
        author?: string | null;
        role?: string | null;
        id?: string | null;
      }[]
    | null;
  upcoming_dates?:
    | {
        date: string;
        location?: string | null;
        available_spots?: number | null;
        id?: string | null;
      }[]
    | null;
  status?: ('active' | 'archived' | 'draft') | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form_submissions".
 */
export interface FormSubmission {
  id: number;
  form_type: 'contact' | 'enrollment' | 'newsletter' | 'download';
  name: string;
  email: string;
  phone?: string | null;
  message?: string | null;
  course_reference?: (number | null) | Course;
  submitted_at?: string | null;
  status?: ('new' | 'contacted' | 'completed') | null;
  admin_notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission1 {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'comments';
        value: number | Comment;
      } | null)
    | ({
        relationTo: 'age_groups';
        value: number | AgeGroup;
      } | null)
    | ({
        relationTo: 'course_categories';
        value: number | CourseCategory;
      } | null)
    | ({
        relationTo: 'courses';
        value: number | Course;
      } | null)
    | ({
        relationTo: 'form_submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission1;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?:
          | T
          | {
              richText?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'cta-relume'?:
          | T
          | {
              heading?: T;
              subheading?: T;
              image?: T;
              form_settings?:
                | T
                | {
                    email_placeholder?: T;
                    button_text?: T;
                    success_message?: T;
                    error_message?: T;
                    form_identifier?: T;
                  };
              terms_and_conditions?:
                | T
                | {
                    show_terms?: T;
                    terms_text?: T;
                    terms_link_text?: T;
                    terms_link_url?: T;
                  };
              layout?: T;
              background_color?: T;
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              columns?:
                | T
                | {
                    size?: T;
                    richText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'footer-block'?:
          | T
          | {
              logo?: T;
              contact_info?:
                | T
                | {
                    address_label?: T;
                    address?: T;
                    contact_label?: T;
                    phone?: T;
                    email?: T;
                  };
              social_links?:
                | T
                | {
                    platform?: T;
                    url?: T;
                    id?: T;
                  };
              footer_links?:
                | T
                | {
                    title?: T;
                    links?:
                      | T
                      | {
                          label?: T;
                          url?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              newsletter?:
                | T
                | {
                    enabled?: T;
                    heading?: T;
                    description?: T;
                    button_text?: T;
                    placeholder_text?: T;
                  };
              partner_logos?:
                | T
                | {
                    logo?: T;
                    name?: T;
                    url?: T;
                    id?: T;
                  };
              legal_links?:
                | T
                | {
                    label?: T;
                    url?: T;
                    id?: T;
                  };
              copyright_text?: T;
              use_footer_config?: T;
              id?: T;
              blockName?: T;
            };
        header05?:
          | T
          | {
              heading?: T;
              description?: T;
              buttons?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              backgroundImage?: T;
              overlay?: T;
              id?: T;
              blockName?: T;
            };
        layout01?:
          | T
          | {
              eyebrow?: T;
              heading?: T;
              description?: T;
              buttons?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              image?: T;
              imageAlt?: T;
              id?: T;
              blockName?: T;
            };
        layout03?:
          | T
          | {
              heading?: T;
              description?: T;
              image?: T;
              imageAlt?: T;
              id?: T;
              blockName?: T;
            };
        layout04?:
          | T
          | {
              tagline?: T;
              heading?: T;
              description?: T;
              features?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              buttons?:
                | T
                | {
                    text?: T;
                    variant?: T;
                    url?: T;
                    openInNewTab?: T;
                    id?: T;
                  };
              image?: T;
              imageAlt?: T;
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              media?: T;
              id?: T;
              blockName?: T;
            };
        navigation?:
          | T
          | {
              logo?: T;
              menu_items?:
                | T
                | {
                    label?: T;
                    type?: T;
                    url?: T;
                    dropdown_sections?:
                      | T
                      | {
                          section_title?: T;
                          items?:
                            | T
                            | {
                                label?: T;
                                url?: T;
                                description?: T;
                                icon?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                    simple_dropdown_items?:
                      | T
                      | {
                          label?: T;
                          url?: T;
                          id?: T;
                        };
                    featured_content?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          description?: T;
                          image?: T;
                          link_text?: T;
                          link_url?: T;
                          view_all_text?: T;
                          view_all_url?: T;
                        };
                    id?: T;
                  };
              cta_buttons?:
                | T
                | {
                    text?: T;
                    url?: T;
                    style?: T;
                    id?: T;
                  };
              use_header_config?: T;
              id?: T;
              blockName?: T;
            };
        archive?:
          | T
          | {
              introContent?: T;
              populateBy?: T;
              relationTo?: T;
              categories?: T;
              limit?: T;
              selectedDocs?: T;
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              enableIntro?: T;
              introContent?: T;
              id?: T;
              blockName?: T;
            };
        testimonial?:
          | T
          | {
              heading?: T;
              subheading?: T;
              testimonials?:
                | T
                | {
                    rating?: T;
                    quote?: T;
                    author?:
                      | T
                      | {
                          name?: T;
                          title?: T;
                          avatar?: T;
                        };
                    company?:
                      | T
                      | {
                          name?: T;
                          logo?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  age_groups?: T;
  reading_time?: T;
  featured?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments_select".
 */
export interface CommentsSelect<T extends boolean = true> {
  content?: T;
  author?:
    | T
    | {
        name?: T;
        email?: T;
      };
  post?: T;
  isApproved?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "age_groups_select".
 */
export interface AgeGroupsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  min_age?: T;
  max_age?: T;
  icon?: T;
  order?: T;
  color?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "course_categories_select".
 */
export interface CourseCategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  icon?: T;
  order?: T;
  target_audience?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses_select".
 */
export interface CoursesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  category?: T;
  age_groups?: T;
  price?: T;
  duration_minutes?: T;
  format?: T;
  max_participants?: T;
  featured_image?: T;
  content_blocks?:
    | T
    | {
        banner?:
          | T
          | {
              style?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
        code?:
          | T
          | {
              language?: T;
              code?: T;
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              media?: T;
              id?: T;
              blockName?: T;
            };
      };
  testimonials?:
    | T
    | {
        testimonial?: T;
        author?: T;
        role?: T;
        id?: T;
      };
  upcoming_dates?:
    | T
    | {
        date?: T;
        location?: T;
        available_spots?: T;
        id?: T;
      };
  status?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form_submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form_type?: T;
  name?: T;
  email?: T;
  phone?: T;
  message?: T;
  course_reference?: T;
  submitted_at?: T;
  status?: T;
  admin_notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect1<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo?: (number | null) | Media;
  menu_items?:
    | {
        label: string;
        type: 'link' | 'dropdown' | 'mega_menu';
        url?: string | null;
        children?:
          | {
              label: string;
              url: string;
              description?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  age_groups_menu?: (number | AgeGroup)[] | null;
  course_categories_menu?: (number | CourseCategory)[] | null;
  cta_button?: {
    text?: string | null;
    url?: string | null;
    style?: ('primary' | 'secondary') | null;
  };
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  contact_info?: {
    email?: string | null;
    phone?: string | null;
    address?: string | null;
  };
  social_links?:
    | {
        platform: 'facebook' | 'instagram' | 'linkedin' | 'youtube';
        url: string;
        id?: string | null;
      }[]
    | null;
  newsletter?: {
    heading?: string | null;
    description?: string | null;
    button_text?: string | null;
  };
  footer_links?:
    | {
        title: string;
        links?:
          | {
              label: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  partner_logos?: (number | Media)[] | null;
  copyright_text?: string | null;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: number;
  site_name: string;
  tagline?: string | null;
  default_seo?: {
    meta_title?: string | null;
    meta_description?: string | null;
    og_image?: (number | null) | Media;
  };
  contact?: {
    email?: string | null;
    phone?: string | null;
    whatsapp?: string | null;
    address?: string | null;
    kvk_number?: string | null;
  };
  social_media?: {
    facebook_url?: string | null;
    instagram_url?: string | null;
    linkedin_url?: string | null;
    youtube_url?: string | null;
  };
  analytics?: {
    google_analytics_id?: string | null;
    google_tag_manager_id?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  menu_items?:
    | T
    | {
        label?: T;
        type?: T;
        url?: T;
        children?:
          | T
          | {
              label?: T;
              url?: T;
              description?: T;
              id?: T;
            };
        id?: T;
      };
  age_groups_menu?: T;
  course_categories_menu?: T;
  cta_button?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
      };
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  contact_info?:
    | T
    | {
        email?: T;
        phone?: T;
        address?: T;
      };
  social_links?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  newsletter?:
    | T
    | {
        heading?: T;
        description?: T;
        button_text?: T;
      };
  footer_links?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              label?: T;
              url?: T;
              id?: T;
            };
        id?: T;
      };
  partner_logos?: T;
  copyright_text?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  site_name?: T;
  tagline?: T;
  default_seo?:
    | T
    | {
        meta_title?: T;
        meta_description?: T;
        og_image?: T;
      };
  contact?:
    | T
    | {
        email?: T;
        phone?: T;
        whatsapp?: T;
        address?: T;
        kvk_number?: T;
      };
  social_media?:
    | T
    | {
        facebook_url?: T;
        instagram_url?: T;
        linkedin_url?: T;
        youtube_url?: T;
      };
  analytics?:
    | T
    | {
        google_analytics_id?: T;
        google_tag_manager_id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}